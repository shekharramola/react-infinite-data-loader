{"version":3,"sources":["../../src/index.js","ContentLoader.js","InlineLoader.js","App.js","index.js"],"names":["url","useButton","arrayName","React","isLoading","setLoading","isViewMoreLoading","setViewMoreLoading","pageNo","setPageNo","list","setList","isLast","setLast","window","fetchData","a","fetch","result","data","incrementPage","page","handleScroll","document","fakeItems","ContentLoader","className","map","item","index","key","InlineLoader","App","useInfiniteDataLoader","Fragment","dog","src","breeds","length","name","life_span","onClick","style","color","textAlign","ReactDOM","render","getElementById"],"mappings":"yzCACC,I,EAA8B,SAAC,GAAgC,IAA/BA,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,UAAe,IAC9BC,oBAD8B,MACvDC,EADuD,KAC5CC,EAD4C,SAEdF,oBAFc,MAEvDG,EAFuD,KAEpCC,EAFoC,SAGlCJ,mBAHkC,MAGvDK,EAHuD,KAG/CC,EAH+C,SAItCN,mBAJsC,OAIvDO,EAJuD,KAIjDC,EAJiD,SAKpCR,oBALoC,MAKvDS,EALuD,KAK/CC,EAL+C,KAO9DV,qBAAgB,WAEd,OADA,GAAcW,iCAAd,GACO,kBAAMA,oCAAN,MACN,CAHHX,IAKAA,qBAAgB,YACd,GAAWY,MACV,CAFHZ,IAGA,IAAMY,EAAS,e,EAAA,G,EAAA,UAAG,8BAAAC,EAAA,6DAChBR,MAAeH,GAAfG,GAAkCD,GAAlCC,GADgB,SAEKS,MAAM,GAAD,0BAFV,kBAEVC,EAFU,gBAGCA,EAHD,cAGZC,EAHY,OAIhB,IACEA,EAAOA,EAAPA,IAEF,IAAIA,UACFN,MAEFR,MACAE,MACAI,EAAQD,SAARC,IAZgB,2C,+KAAH,qDAeTS,EAAgB,WACpBX,GAAU,mBAAUY,EAAV,MAGNC,EAAe,WAEjBR,mBAAqBS,yBAArBT,YACAS,yBAFF,eAKA,GAAcH,KAEhB,MAAO,CAAEA,cAAF,EAAiBhB,UAAjB,EAA4BE,kBAA5B,EAA+CI,KAA/C,EAAqDE,OAArD,EAA4DX,cCzCrE,MAAMuB,EAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAedC,MAbO,IAElB,yBAAKC,UAAU,SACZF,GAAaA,EAAUG,IAAI,CAACC,EAAMC,IAE/B,yBAAKH,UAAU,UAAUI,IAAKD,GAC5B,yBAAKH,UAAU,qCCDZK,MANM,IAEb,yBAAKL,UAAU,UAAf,cCgEOM,MAhEH,KACV,MADgB,EAWZC,EAAsB,CAAEjC,IAVhB,gEAU0BC,WAAW,EAAMC,UAAW,OANhEE,EALc,EAKdA,UACAE,EANc,EAMdA,kBACAI,EAPc,EAOdA,KACAU,EARc,EAQdA,cACAR,EATc,EASdA,OACAX,EAVc,EAUdA,UAMF,OAAOG,EACL,kBAAC,EAAD,MAEA,kBAAC,IAAM8B,SAAP,KACE,yBAAKR,UAAU,SACZhB,GACCA,EAAKiB,IAAI,CAACQ,EAAKN,IAEX,yBAAKC,IAAKD,EAAOH,UAAU,QACzB,yBAAKA,UAAU,QAAQU,IAAKD,EAAInC,MAChC,yBAAK0B,UAAU,aACb,4BACE,2BACGS,EAAIE,OAAOC,OAAS,EACjBH,EAAIE,OAAO,GAAGE,KACd,kBAGR,2BACG,IACAJ,EAAIE,OAAOC,OAAS,EACjBH,EAAIE,OAAO,GAAGG,UACd,iBAOlB,yBAAKd,UAAU,UACZpB,EACC,kBAAC,EAAD,MAEAL,GACE,4BAAQyB,UAAU,MAAMe,QAtCjB,KACfrB,MAqCQ,aAKHR,GACC,wBAAI8B,MAAO,CAAEC,MAAO,QAASC,UAAW,WAAxC,sBCvDVC,IAASC,OAAO,kBAAC,EAAD,MAASvB,SAASwB,eAAe,U","file":"static/js/main.5818be1d.chunk.js","sourcesContent":["import * as React from \"react\";\n const useInfiniteDataLoader = ({url, useButton, arrayName}) => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [isViewMoreLoading, setViewMoreLoading] = React.useState(false);\n  const [pageNo, setPageNo] = React.useState(1);\n  const [list, setList] = React.useState([]);\n  const [isLast, setLast] = React.useState(false);\n\n  React.useEffect(() => {\n    !useButton && window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [useButton]);\n\n  React.useEffect(() => {\n    !isLast && fetchData();\n  }, [pageNo]);\n  const fetchData = async () => {\n    pageNo === 1 ? setLoading(true) : setViewMoreLoading(true);\n    const result = await fetch(`${url}&page=${pageNo}`);\n    let data = await result.json();\n    if (arrayName) {\n      data = data[arrayName];\n    }\n    if (data.length === 0) {\n      setLast(true);\n    }\n    setLoading(false);\n    setViewMoreLoading(false);\n    setList(list.concat(data));\n  };\n\n  const incrementPage = () => {\n    setPageNo((page) => page + 1);\n  };\n\n  const handleScroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n      document.documentElement.offsetHeight\n    )\n      return;\n    !useButton && incrementPage();\n  };\n  return { incrementPage, isLoading, isViewMoreLoading, list, isLast,useButton };\n};\nexport default useInfiniteDataLoader;","import React from \"react\";\n\nconst fakeItems = [1,2,3,4,5,6];\n\nconst ContentLoader = () => {\n  return (\n    <div className=\"cards\">\n      {fakeItems && fakeItems.map((item, index) => {\n        return (\n          <div className=\"wrapper\" key={index}>\n            <div className=\"card-loader card-loader--tabs\"></div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default ContentLoader;","\n\nimport React from 'react';\nconst InlineLoader = () => {\n    return(\n        <div className=\"loader\">Loading...</div>\n    )\n}\n\nexport default InlineLoader;","import React from \"react\";\nimport  useInfiniteDataLoader  from \"react-infinite-data-loader\";\nimport ContentLoader from \"./ContentLoader\";\nimport InlineLoader from \"./InlineLoader\";\n\nconst App = () => {\n  const URL = \"https://api.thedogapi.com/v1/images/search?limit=6&order=Desc\";\n  // const URL =\n  //   \"https://hn.algolia.com/api/v1/search?query=curtis&page=20&hitsPerPage=50\";\n  const {\n    isLoading,\n    isViewMoreLoading,\n    list,\n    incrementPage,\n    isLast,\n    useButton,\n  } = useInfiniteDataLoader({ url: URL, useButton: true, arrayName: null });\n  const showMore = () => {\n    incrementPage();\n  };\n\n  return isLoading ? (\n    <ContentLoader />\n  ) : (\n    <React.Fragment>\n      <div className=\"cards\">\n        {list &&\n          list.map((dog, index) => {\n            return (\n              <div key={index} className=\"card\">\n                <img className=\"image\" src={dog.url} />\n                <div className=\"container\">\n                  <h4>\n                    <b>\n                      {dog.breeds.length > 0\n                        ? dog.breeds[0].name\n                        : \"Unknown breed\"}\n                    </b>\n                  </h4>\n                  <p>\n                    {\" \"}\n                    {dog.breeds.length > 0\n                      ? dog.breeds[0].life_span\n                      : \"Not known\"}\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"center\">\n        {isViewMoreLoading ? (\n          <InlineLoader />\n        ) : (\n          useButton && (\n            <button className=\"btn\" onClick={showMore}>\n              Show more\n            </button>\n          )\n        )}\n        {isLast && (\n          <h1 style={{ color: \"green\", textAlign: \"center\" }}>\n            NO MORE RECORDS\n          </h1>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}